data[, var2] <- as.numeric(data[, var2])
# Extraer las coordenadas de las dos ciudades
coord_ciudad1 <- as.numeric(data[rownames(data) == ciudad1, ])
coord_ciudad2 <- as.numeric(data[rownames(data) == ciudad2, ])
# Calcular la distancia euclidiana
dist_euclidiana <- sqrt(sum((coord_ciudad1 - coord_ciudad2)^2))
# Mostrar el resultado
print(paste("Distancia Euclidiana entre", ciudad1, "y", ciudad2, ":", dist_euclidiana))
# Devolver la distancia
# return(dist_euclidiana)
}
infra_vars <- subset(ciudades, select = startsWith(colnames(ciudades), "INFRA"))
# Calcular la matriz de correlación
cor_matrix <- cor(infra_vars)
# Encontrar las variables con mayor correlación
max_corr <- which(cor_matrix == max(cor_matrix[upper.tri(cor_matrix)]), arr.ind = TRUE)
var1 <- colnames(infra_vars)[max_corr[1]]
var2 <- colnames(infra_vars)[max_corr[2]]
# Llamar a la función para las variables con mayor correlación
dist_mahalanobis <- calcular_mahalanobis(ciudades, var1, var2, "San Andrés", "Riohacha", resultados)
ciudades <- read_excel("datos/ciudades original-filtrado-con etiquetas - copia.xlsx")
# Función para calcular la distancia de Mahalanobis y graficar
calcular_mahalanobis <- function(ciudades, var1, var2, ciudad1, ciudad2, resultados) {
# Selección de las variables y conversión a data frame
data <- as.data.frame(subset(ciudades, select = c(var1, var2)))
rownames(data) <- ciudades$CIUDADES
# Convertir las variables a numéricas
data[, var1] <- as.numeric(data[, var1])
data[, var2] <- as.numeric(data[, var2])
# Cálculo de la distancia de Mahalanobis entre las dos ciudades
dist_mahalanobis <- sqrt(mahalanobis(as.numeric(data[rownames(data) == ciudad1, ]),
colMeans(data),
cov(data)))
# Agregar los resultados a la tabla
resultados <- rbind(resultados, data.frame(
Ciudad1 = ciudad1,
Ciudad2 = ciudad2,
Distancia_Mahal = dist_mahalanobis,
Variables = paste(var1, var2, sep = " & ")
))
# Mostrar distancias
# print(paste("Distancia Mahalanobis entre", ciudad1, "y", ciudad2, ": ", dist_mahalanobis))
# Graficar
xbar <- colMeans(data)
plot(data[, 1], data[, 2],
xlab = var1, ylab = var2, main = paste("Gráfico de", var1, "vs", var2),
xlim = c(min(data[, 1], na.rm = TRUE), max(data[, 1], na.rm = TRUE)),
ylim = c(min(data[, 2], na.rm = TRUE), max(data[, 2], na.rm = TRUE)))
# Añadir etiquetas de las ciudades
text(data[, 1], data[, 2], rownames(data), cex = 0.7, pos = 3)
# Dibujar líneas de la media
abline(h = xbar[2], col = "orange", lty = 2)
abline(v = xbar[1], col = "orange", lty = 2)
# Etiqueta para la media
text(xbar[1] - 0.2, xbar[2] - 0.02,
labels = expression(bar(x) ~ "y" ~ bar(y)),
col = "purple", cex = 0.7, font = 1, las = 2)
# Devolver los resultados actualizados
# return(resultados)
}
ciudades[ciudades$CIUDADES=="San Arés",1] <-  "San Andrés"
# Crear tabla vacía para almacenar resultados
resultados <- data.frame(Ciudad1 = character(0), Ciudad2 = character(0),
Distancia_Mahal = numeric(0),
Variables = character(0))
# Función para calcular la distancia euclidiana entre dos ciudades
calcular_euclidiana <- function(ciudades, var1, var2, ciudad1, ciudad2) {
# Selección de las variables y conversión a data frame
data <- as.data.frame(subset(ciudades, select = c(var1, var2)))
rownames(data) <- ciudades$CIUDADES
# Convertir las variables a numéricas
data[, var1] <- as.numeric(data[, var1])
data[, var2] <- as.numeric(data[, var2])
# Extraer las coordenadas de las dos ciudades
coord_ciudad1 <- as.numeric(data[rownames(data) == ciudad1, ])
coord_ciudad2 <- as.numeric(data[rownames(data) == ciudad2, ])
# Calcular la distancia euclidiana
dist_euclidiana <- sqrt(sum((coord_ciudad1 - coord_ciudad2)^2))
# Mostrar el resultado
# print(paste("Distancia Euclidiana entre", ciudad1, "y", ciudad2, ":", dist_euclidiana))
# Devolver la distancia
return(dist_euclidiana)
}
infra_vars <- subset(ciudades, select = startsWith(colnames(ciudades), "INFRA"))
# Calcular la matriz de correlación
cor_matrix <- cor(infra_vars)
# Encontrar las variables con mayor correlación
max_corr <- which(cor_matrix == max(cor_matrix[upper.tri(cor_matrix)]), arr.ind = TRUE)
var1 <- colnames(infra_vars)[max_corr[1]]
var2 <- colnames(infra_vars)[max_corr[2]]
# Llamar a la función para las variables con mayor correlación
dist_mahalanobis <- calcular_mahalanobis(ciudades, var1, var2, "San Andrés", "Riohacha", resultados)
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
dist_mahalanobis
calcular_mahalanobis(ciudades, var1, var2, "San Andrés", "Riohacha", resultados)
ciudades <- read_excel("datos/ciudades original-filtrado-con etiquetas - copia.xlsx")
# Función para calcular la distancia de Mahalanobis y graficar
calcular_mahalanobis <- function(ciudades, var1, var2, ciudad1, ciudad2, resultados) {
# Selección de las variables y conversión a data frame
data <- as.data.frame(subset(ciudades, select = c(var1, var2)))
rownames(data) <- ciudades$CIUDADES
# Convertir las variables a numéricas
data[, var1] <- as.numeric(data[, var1])
data[, var2] <- as.numeric(data[, var2])
# Cálculo de la distancia de Mahalanobis entre las dos ciudades
dist_mahalanobis <- sqrt(mahalanobis(as.numeric(data[rownames(data) == ciudad1, ]),
colMeans(data),
cov(data)))
# Agregar los resultados a la tabla
resultados <- rbind(resultados, data.frame(
Ciudad1 = ciudad1,
Ciudad2 = ciudad2,
Distancia_Mahal = dist_mahalanobis,
Variables = paste(var1, var2, sep = " & ")
))
# Mostrar distancias
# print(paste("Distancia Mahalanobis entre", ciudad1, "y", ciudad2, ": ", dist_mahalanobis))
# Graficar
xbar <- colMeans(data)
plot(data[, 1], data[, 2],
xlab = var1, ylab = var2, main = paste("Gráfico de", var1, "vs", var2),
xlim = c(min(data[, 1], na.rm = TRUE), max(data[, 1], na.rm = TRUE)),
ylim = c(min(data[, 2], na.rm = TRUE), max(data[, 2], na.rm = TRUE)))
# Añadir etiquetas de las ciudades
text(data[, 1], data[, 2], rownames(data), cex = 0.7, pos = 3)
# Dibujar líneas de la media
abline(h = xbar[2], col = "orange", lty = 2)
abline(v = xbar[1], col = "orange", lty = 2)
# Etiqueta para la media
text(xbar[1] - 0.2, xbar[2] - 0.02,
labels = expression(bar(x) ~ "y" ~ bar(y)),
col = "purple", cex = 0.7, font = 1, las = 2)
# Devolver los resultados actualizados
return(resultados)
}
ciudades[ciudades$CIUDADES=="San Arés",1] <-  "San Andrés"
# Crear tabla vacía para almacenar resultados
resultados <- data.frame(Ciudad1 = character(0), Ciudad2 = character(0),
Distancia_Mahal = numeric(0),
Variables = character(0))
# Función para calcular la distancia euclidiana entre dos ciudades
calcular_euclidiana <- function(ciudades, var1, var2, ciudad1, ciudad2) {
# Selección de las variables y conversión a data frame
data <- as.data.frame(subset(ciudades, select = c(var1, var2)))
rownames(data) <- ciudades$CIUDADES
# Convertir las variables a numéricas
data[, var1] <- as.numeric(data[, var1])
data[, var2] <- as.numeric(data[, var2])
# Extraer las coordenadas de las dos ciudades
coord_ciudad1 <- as.numeric(data[rownames(data) == ciudad1, ])
coord_ciudad2 <- as.numeric(data[rownames(data) == ciudad2, ])
# Calcular la distancia euclidiana
dist_euclidiana <- sqrt(sum((coord_ciudad1 - coord_ciudad2)^2))
# Mostrar el resultado
# print(paste("Distancia Euclidiana entre", ciudad1, "y", ciudad2, ":", dist_euclidiana))
# Devolver la distancia
return(dist_euclidiana)
}
infra_vars <- subset(ciudades, select = startsWith(colnames(ciudades), "INFRA"))
# Calcular la matriz de correlación
cor_matrix <- cor(infra_vars)
# Encontrar las variables con mayor correlación
max_corr <- which(cor_matrix == max(cor_matrix[upper.tri(cor_matrix)]), arr.ind = TRUE)
var1 <- colnames(infra_vars)[max_corr[1]]
var2 <- colnames(infra_vars)[max_corr[2]]
# Llamar a la función para las variables con mayor correlación
dist_mahalanobis <- calcular_mahalanobis(ciudades, var1, var2, "San Andrés", "Riohacha", resultados)
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
dist_mahalanobis
dist_euclidiana
colnames(dist_mahalanobis) <- c("Ciudad 1","Ciudad 2","Distancia de Mahalanobis","Variables")
dist_mahalanobis
# Llamar a la función para las variables con mayor correlación
dist_mahalanobis <- calcular_mahalanobis(ciudades, var1, var2, "San Andrés", "Riohacha", resultados)
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
dist_mahalanobis
colnames(dist_mahalanobis) <- c("Ciudad 1","Ciudad 2","Distancia de Mahalanobis","Variables")
dist_mahalanobis[1,5] <- dist_euclidiana
# Llamar a la función para las variables con mayor correlación
dist_mahalanobis <- calcular_mahalanobis(ciudades, var1, var2, "San Andrés", "Riohacha", resultados)
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
dist_mahalanobis[1,5] <- dist_euclidiana
colnames(dist_mahalanobis) <- c("Ciudad 1","Ciudad 2","Distancia de Mahalanobis","Variables")
dist_mahalanobis
# Llamar a la función para las variables con mayor correlación
dist_mahalanobis <- calcular_mahalanobis(ciudades, var1, var2, "San Andrés", "Riohacha", resultados)
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
dist_mahalanobis
dist_euclidiana
distancias <- cbind(dist_mahalanobism dist_euclidiana
distancias
# Llamar a la función para las variables con mayor correlación
dist_mahalanobis <- calcular_mahalanobis(ciudades, var1, var2, "San Andrés", "Riohacha", resultados)
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
distancias <- cbind(dist_mahalanobis, dist_euclidiana
# Llamar a la función para las variables con mayor correlación
dist_mahalanobis <- calcular_mahalanobis(ciudades, var1, var2, "San Andrés", "Riohacha", resultados)
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
distancias <- cbind(dist_mahalanobis, dist_euclidiana)
distancias
colnames(dist_mahalanobis) <- c("Ciudad 1","Ciudad 2","Distancia de Mahalanobis","Variables","Ditancia Euclidiana")
# Llamar a la función para las variables con mayor correlación
dist_mahalanobis <- calcular_mahalanobis(ciudades, var1, var2, "San Andrés", "Riohacha", resultados)
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
distancias <- cbind(dist_mahalanobis, dist_euclidiana)
colnames(distancias) <- c("Ciudad 1","Ciudad 2","Distancia de Mahalanobis","Variables","Ditancia Euclidiana")
distancias
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center")
# Llamar a la función para las variables con mayor correlación
dist_mahalanobis <- calcular_mahalanobis(ciudades, var1, var2, "San Andrés", "Riohacha", resultados)
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
distancias <- cbind(dist_mahalanobis, dist_euclidiana)
colnames(distancias) <- c("Ciudad 1","Ciudad 2","Distancia de Mahalanobis","Variables","Ditancia Euclideana")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis")
distancias
# Llamar a la función para las variables con mayor correlación
dist_mahalanobis <- calcular_mahalanobis(ciudades, var1, var2, "San Andrés", "Riohacha", resultados)
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
distancias <- cbind(dist_mahalanobis, dist_euclidiana)
colnames(distancias) <- c("Ciudad 1","Ciudad 2","Distancia de Mahalanobis","Variables","Distancia Euclideana")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center")
# Encontrar las variables con menor correlación
min_corr <- which(cor_matrix == min(cor_matrix[upper.tri(cor_matrix)]), arr.ind = TRUE)
var11 <- colnames(infra_vars)[min_corr[1]]
var22 <- colnames(infra_vars)[min_corr[2]]
# Llamar a la función para las variables con menor correlación
dist_mahalanobis <- calcular_mahalanobis(ciudades, var11, var22, "San Andrés", "Riohacha", resultados)
dist_euclidiana <- calcular_euclidiana(ciudades, var11, var22, "San Andrés", "Riohacha")
distancias <- cbind(dist_mahalanobis, dist_euclidiana)
colnames(distancias) <- c("Ciudad 1","Ciudad 2","Distancia de Mahalanobis","Variables","Distancia Euclideana")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center")
orrelacidistancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_espn() |> opt_align_table_header(align = "center")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 10)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_guardian() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 10)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_pff() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 10)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |>   cols_width(c(1,1,1,1,1))
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |>   cols_width(c(1,1,1,1,1))
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |>   cols_width(. ~ 1)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_dot_matrix() |> opt_align_table_header(align = "center")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 10)
#| echo: false
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
distancias <- cbind(dist_mahalanobis, dist_euclidiana)
colnames(distancias) <- c("Ciudad 1","Ciudad 2","Distancia de\n Mahalanobis","Variables","Distancia\n Euclideana")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia\n Euclideana", .before = "Distancia de\n Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 10)
Distancia de\n Mahalanobis
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia\n Euclideana", .before = "Distancia de\n Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 10)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia\n Euclideana", .before = "Distancia de\n Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 10) |> fmt_markdown()
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia\n Euclideana", .before = "Distancia de\n Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 10) |> fmt_markdown()
#| echo: false
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
distancias
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia\n Euclideana", .before = "Distancia de\n Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 10) |> fmt_markdown()
dist_mahalanobis
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia\n Euclideana", .before = "Distancia de\n Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 10) |> fmt_markdown()
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia\n Euclideana", .before = "Distancia de\n Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 10) |> fmt_markdown()
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 10) |> fmt_markdown()
#| echo: false
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
distancias <- cbind(dist_mahalanobis, dist_euclidiana)
colnames(distancias) <- c("Ciudad 1","Ciudad 2","Distancia de Mahalanobis","Variables","Distancia Euclideana")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 10) |> fmt_markdown()
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |>   tab_spanner(
label = "Distancia de\n Mahalanobis",
columns = vars(`Distancia de Mahalanobis`)
)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_spanner(
label = "Distancia de\n Mahalanobis",
columns = vars(`Distancia de Mahalanobis`)
)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_spanner(
columns = "Distancia de\n Mahalanobis",
columns = vars(`Distancia de Mahalanobis`)
)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_spanner(
label = "Distancia de\n Mahalanobis",
columns = `Distancia de Mahalanobis`
)
#| echo: false
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
distancias <- cbind(dist_mahalanobis, dist_euclidiana)
colnames(distancias) <- c("Ciudad 1","Ciudad 2","Distancia de\n Mahalanobis","Variables","Distancia\n Euclideana")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia\n Euclideana", .before = "Distancia de\n Mahalanobis") |> gt() |> fmt_markdown()
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia\n Euclideana", .before = "Distancia de\n Mahalanobis") |> gt() |> fmt_markdown(columns = everything())
#| echo: false
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
distancias <- cbind(dist_mahalanobis, dist_euclidiana)
colnames(distancias) <- c("Ciudad 1","Ciudad 2","Distancia de<br /> Mahalanobis","Variables","Distancia<br /> Euclideana")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia<br /> Euclideana", .before = "Distancia de<br /> Mahalanobis") |> gt() |> fmt_markdown(columns = everything()) |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia<br /> Euclideana", .before = "Distancia de<br /> Mahalanobis") |> gt() |> fmt_markdown(columns = everything())
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia<br /> Euclideana", .before = "Distancia de<br /> Mahalanobis") |> gt()
#| echo: false
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
distancias <- cbind(dist_mahalanobis, dist_euclidiana)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> opt_align_table_header(align = "center")
#| echo: false
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
distancias <- cbind(dist_mahalanobis, dist_euclidiana)
colnames(distancias) <- c("Ciudad 1","Ciudad 2","Distancia de Mahalanobis","Variables","Distancia Euclideana")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> opt_align_table_header(align = "center")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.width = px(300))
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.width = px(4))
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.width = px(400))
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.width = px(500))
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.width = px(600))
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.width = px(600), table.font.size = 12)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.width = px(700), table.font.size = 12)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.width = px(650), table.font.size = 12)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.width = px(670), table.font.size = 12)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.width = px(670),column_labels.font.size = 8)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.width = px(670), table.font.size = 12, column_labels.font.size = 8)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.width = px(670), table.font.size = 12, column_labels.font.size = 1)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |>(table.font.size = 12, column_labels.font.size = 1)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 12, column_labels.font.size = 1)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés")|> opt_align_table_header(align = "center") |> tab_options(table.font.size = 12, column_labels.font.size = 1)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 12px, column_labels.font.size = 1px)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 12px, column_labels.font.size = 1px)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 12, column_labels.font.size = 1)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 12, column_labels.font.size = 0.1)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 12, column_labels.font.size = 200)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(column_labels.font.size = 200)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(column_labels.font.size = 1)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 12, column_labels.font.size = 8)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(column_labels.font.size = 8)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_options(table.font.size = 12, column_labels.font.size = 12)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |>   tab_style(
style = list(
cell_text(size = px(10))
),
locations = cells_column_labels()
)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_style(
style = list(
cell_text(size = px(10))
),
locations = cells_column_labels()
)
ciudades <- read_excel("datos/ciudades original-filtrado-con etiquetas - copia.xlsx")
#| output: false
library(readxl)
library(tm)
library(wordcloud)
library(SnowballC)
library(readr)
library(tidyverse)
library(lattice)
library(MASS)
library(latex2exp)
library(bestNormalize)
library(gt)
library(gtExtras)
library(dplyr)
library(ggplot2)
library(htmlwidgets)
library(kableExtra)
library(distances)
options(scipen = 999)
ciudades <- read_excel("datos/ciudades original-filtrado-con etiquetas - copia.xlsx")
# Función para calcular la distancia de Mahalanobis y graficar
calcular_mahalanobis <- function(ciudades, var1, var2, ciudad1, ciudad2, resultados) {
# Selección de las variables y conversión a data frame
data <- as.data.frame(subset(ciudades, select = c(var1, var2)))
rownames(data) <- ciudades$CIUDADES
# Convertir las variables a numéricas
data[, var1] <- as.numeric(data[, var1])
data[, var2] <- as.numeric(data[, var2])
# Cálculo de la distancia de Mahalanobis entre las dos ciudades
dist_mahalanobis <- sqrt(mahalanobis(as.numeric(data[rownames(data) == ciudad1, ]),
colMeans(data),
cov(data)))
# Agregar los resultados a la tabla
resultados <- rbind(resultados, data.frame(
Ciudad1 = ciudad1,
Ciudad2 = ciudad2,
Distancia_Mahal = round(dist_mahalanobis,3),
Variables = paste(var1, var2, sep = " & ")
))
# Mostrar distancias
# print(paste("Distancia Mahalanobis entre", ciudad1, "y", ciudad2, ": ", dist_mahalanobis))
# Graficar
xbar <- colMeans(data)
plot(data[, 1], data[, 2],
xlab = var1, ylab = var2, main = paste("Gráfico de", var1, "vs", var2),
xlim = c(min(data[, 1], na.rm = TRUE), max(data[, 1], na.rm = TRUE)),
ylim = c(min(data[, 2], na.rm = TRUE), max(data[, 2], na.rm = TRUE)))
# Añadir etiquetas de las ciudades
text(data[, 1], data[, 2], rownames(data), cex = 0.7, pos = 3)
# Dibujar líneas de la media
abline(h = xbar[2], col = "orange", lty = 2)
abline(v = xbar[1], col = "orange", lty = 2)
# Etiqueta para la media
text(xbar[1] - 0.2, xbar[2] - 0.02,
labels = expression(bar(x) ~ "y" ~ bar(y)),
col = "purple", cex = 0.7, font = 1, las = 2)
# Devolver los resultados actualizados
return(resultados)
}
ciudades[ciudades$CIUDADES=="San Arés",1] <-  "San Andrés"
# Crear tabla vacía para almacenar resultados
resultados <- data.frame(Ciudad1 = character(0), Ciudad2 = character(0),
Distancia_Mahal = numeric(0),
Variables = character(0))
# Función para calcular la distancia euclidiana entre dos ciudades
calcular_euclidiana <- function(ciudades, var1, var2, ciudad1, ciudad2) {
# Selección de las variables y conversión a data frame
data <- as.data.frame(subset(ciudades, select = c(var1, var2)))
rownames(data) <- ciudades$CIUDADES
# Convertir las variables a numéricas
data[, var1] <- as.numeric(data[, var1])
data[, var2] <- as.numeric(data[, var2])
# Extraer las coordenadas de las dos ciudades
coord_ciudad1 <- as.numeric(data[rownames(data) == ciudad1, ])
coord_ciudad2 <- as.numeric(data[rownames(data) == ciudad2, ])
# Calcular la distancia euclidiana
dist_euclidiana <- round(sqrt(sum((coord_ciudad1 - coord_ciudad2)^2)),3)
# Mostrar el resultado
# print(paste("Distancia Euclidiana entre", ciudad1, "y", ciudad2, ":", dist_euclidiana))
# Devolver la distancia
return(dist_euclidiana)
}
infra_vars <- subset(ciudades, select = startsWith(colnames(ciudades), "INFRA"))
# Calcular la matriz de correlación
cor_matrix <- cor(infra_vars)
# Encontrar las variables con mayor correlación
max_corr <- which(cor_matrix == max(cor_matrix[upper.tri(cor_matrix)]), arr.ind = TRUE)
var1 <- colnames(infra_vars)[max_corr[1]]
var2 <- colnames(infra_vars)[max_corr[2]]
# Llamar a la función para las variables con mayor correlación
dist_mahalanobis <- calcular_mahalanobis(ciudades, var1, var2, "San Andrés", "Riohacha", resultados)
#| echo: false
dist_euclidiana <- calcular_euclidiana(ciudades, var1, var2, "San Andrés", "Riohacha")
distancias <- cbind(dist_mahalanobis, dist_euclidiana)
colnames(distancias) <- c("Ciudad 1","Ciudad 2","Distancia de Mahalanobis","Variables","Distancia Euclideana")
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |> tab_style(
style = list(
cell_text(size = px(10))
),
locations = cells_column_labels()
)
distancias |> relocate(Variables, .after = "Ciudad 2") |> relocate("Distancia Euclideana", .before = "Distancia de Mahalanobis") |> gt() |> tab_header("Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés") |> gt_theme_538() |> opt_align_table_header(align = "center") |>
tab_options(table.font.size = 12, column_labels.font.size = 8) |> tab_style(
style = list(
cell_text(size = px(12))
),
locations = cells_column_labels()
)
#| output: false
library(readxl)
library(tm)
library(wordcloud)
library(SnowballC)
library(readr)
library(tidyverse)
library(lattice)
library(MASS)
library(latex2exp)
library(bestNormalize)
library(gt)
library(gtExtras)
library(dplyr)
library(ggplot2)
library(htmlwidgets)
library(kableExtra)
library(distances)
options(scipen = 999)
ARWU_100_top <- read.csv2("datos/ARWU_100_top.csv", sep = ";")
# Crear el gráfico
g0 <- ggplot(ARWU_100_top, aes(x = `World.Rank`, y = `Regional.Rank`,
color = HiCi, size = Award)) +
geom_point(alpha = 0.7) +
geom_text(aes(label = Institution), vjust = -0.5, size = 3, check_overlap = TRUE)+
theme_bw() +  # Usar tema blanco y negro
ggtitle("Relación entre Ranking Mundial, Regional, Award y HiCi") +
xlab("Ranking Mundial") +
ylab("Ranking Regional") +
scale_color_gradient(low = "lightblue", high = "red", name = "HiCi") +
scale_size_continuous(name = "Premios") +
scale_x_continuous(limits = c(0, 100)) +  # Limitar eje X de 0 a 100
scale_y_continuous(limits = c(0, 100))    # Limitar eje Y de 0 a 100
g0
g_arwu <- ggplot(ARWU_100_top, aes(x = `World.Rank`, y = `Regional.Rank`,
color = HiCi, size = Award, label = Institution)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = TRUE,
linetype = "dashed", size = 1, color = "black",
aes(label = NULL), fill = "lightgreen") +
theme_bw() +
ggtitle("Relación entre ranking mundial, ranking regional, premios y publicaciones citadas") +
xlab("World Rank") +
ylab("Regional Rank") +
scale_color_gradient(low = "lightblue", high = "red", name = "HiCi") +
scale_size_continuous(name = "Premios")
# Mostrar la gráfica
g_arwu```
# Mostrar la gráfica
g_arwu
# Crear el gráfico
ggplot(ARWU_100_top, aes(x = `World.Rank`, y = `Regional.Rank`,
color = HiCi, size = Award)) +
geom_point(alpha = 0.7) +
geom_text(aes(label = Institution), vjust = -0.5, size = 3, check_overlap = TRUE)+
theme_bw() +  # Usar tema blanco y negro
ggtitle("Relación entre Ranking Mundial, Regional, Award y HiCi") +
xlab("Ranking Mundial") +
ylab("Ranking Regional") +
scale_color_gradient(low = "lightblue", high = "red", name = "HiCi") +
scale_size_continuous(name = "Premios") +
scale_x_continuous(limits = c(0, 100)) +  # Limitar eje X de 0 a 100
scale_y_continuous(limits = c(0, 100))    # Limitar eje Y de 0 a 100
