[
  {
    "objectID": "Diapositivas.html#laboratorio-1",
    "href": "Diapositivas.html#laboratorio-1",
    "title": "Laboratorios 1 y 2",
    "section": "Laboratorio 1",
    "text": "Laboratorio 1"
  },
  {
    "objectID": "Diapositivas.html#punto-3",
    "href": "Diapositivas.html#punto-3",
    "title": "Laboratorios 1 y 2",
    "section": "Punto 3",
    "text": "Punto 3\nCon los datos del arwu elaborar una matriz de dispersión para los rankings mundial, regional y nacional con las densidades aproximadas en la diagonal y las correlaciones en el triángulo inferior de la matriz.\n\n\n\nARWU_100_top &lt;- read.csv2(\"datos/ARWU_100_top.csv\", sep = \";\")\ndata &lt;-  data.frame(Universidades = as.factor(ARWU_100_top$Institution),\n                   Premios_Nobel = ARWU_100_top$Award)\n\npanel.dens &lt;- function(x, ...) {\n  usr &lt;- par(\"usr\")  \n  on.exit(par(usr = usr))  \n  par(usr = c(usr[1:2], 0, 1.5))  \n  dens &lt;- density(x)  \n  y &lt;- dens$y / max(dens$y)  \n  lines(dens$x, y, col = \"cyan\", lwd = 2, ...)  \n}\n\n# Función panel.cor para calcular y mostrar correlaciones\n\npanel.cor &lt;- function(x, y, digits = 2, prefix = \"\", cex.cor, ...) {\n  usr &lt;- par(\"usr\")  \n  on.exit(par(usr = usr))  \n  par(usr = c(0, 1, 0, 1))  \n  r &lt;- cor(x, y, use = \"pairwise.complete.obs\", method = \"spearman\")  # Calcular la correlación\n  txt &lt;- round(r, digits = digits)  \n  txt &lt;- paste0(prefix, txt)  \n  \n  if (missing(cex.cor)) cex.cor &lt;- 0.8 / strwidth(txt)\n  text_size &lt;- cex.cor * max(abs(r), 0.8) \n  \n  text(0.5, 0.5, txt, cex = text_size) \n}\n\n# Seleccionar las columnas de los rankings\nrankings_data &lt;- ARWU_100_top[, c(\"World.Rank\",\"National.Rank\", \"Regional.Rank\")]\n\n# Generar la matriz de dispersión\npairs(rankings_data,\n      cex = 0.8, pch = 23, bg = \"light blue\", \n      diag.panel = panel.dens, cex.labels = 1, font.labels = 3,\n      lower.panel = panel.cor, gap = 0, row1attop = FALSE)"
  },
  {
    "objectID": "Diapositivas.html#punto-4",
    "href": "Diapositivas.html#punto-4",
    "title": "Laboratorios 1 y 2",
    "section": "Punto 4",
    "text": "Punto 4\nElaborar una gráfica de cuatro variables del tipo Gráfica 1.10, ejemplo 1.6.1 con datos del arwu que contenga en las abscisas el ranking mundial, en las ordenadas el ranking regional, el tamaño de los puntos sea el indicador de premios nobel o medallas Field (Award) y el color corresponda a las publicaciones altamente citadas (HiCi).\n¿Se puede identificar algún patrón o tendencia entre estas cuatro variables?\n\n\n\n# Crear el gráfico\nggplot(ARWU_100_top, aes(x = `World.Rank`, y = `Regional.Rank`,\n                               color = HiCi, size = Award)) +\n  geom_point(alpha = 0.7) +  \n  geom_text(aes(label = Institution), vjust = -0.5, size = 3, check_overlap = TRUE)+\n  theme_bw() +  # Usar tema blanco y negro\n  ggtitle(\"Relación entre Ranking Mundial, Regional, Award y HiCi\") +\n  xlab(\"Ranking Mundial\") +\n  ylab(\"Ranking Regional\") +\n  scale_color_gradient(low = \"lightblue\", high = \"red\", name = \"HiCi\") +\n  scale_size_continuous(name = \"Premios\") +\n  scale_x_continuous(limits = c(0, 100)) +  # Limitar eje X de 0 a 100\n  scale_y_continuous(limits = c(0, 100))    # Limitar eje Y de 0 a 100"
  },
  {
    "objectID": "Diapositivas.html#punto-5",
    "href": "Diapositivas.html#punto-5",
    "title": "Laboratorios 1 y 2",
    "section": "Punto 5",
    "text": "Punto 5\nConstruir una nube de palabras que muestre las primeras 20 universidades según el según el World.Rank, por su número de publicaciones altamente citadas (HiCi).\n¿Se puede afirmar que las primeras 10 se distinguen claramente de las otras 10, por su número de publicaciones?\n\n\n\n# Asegúrarse de que el campo HiCi esté en formato numérico\nARWU_100_top$HiCi &lt;- as.numeric(gsub(\",\", \".\", ARWU_100_top$HiCi))\n\n# Filtra las primeras 20 universidades segun el World.Rank\ntop_20 &lt;- ARWU_100_top |&gt; \n  select(Institution,Region,Country,World.Rank,HiCi) |&gt; \n  arrange(desc(HiCi)) |&gt; \n  slice(1:20)\n\n# Prepara los datos para la nube de palabras\n# Selecciona la columna de la universidad y el número de publicaciones (HiCi) como el tamaño de cada palabra\nwordcloud_data &lt;- top_20 %&gt;%\n  select(Institution, HiCi) %&gt;%\n  na.omit() %&gt;%\n  rename(word = Institution, freq = HiCi)\n# Genera la nube de palabras\nwordcloud(wordcloud_data$word,wordcloud_data$freq, scale=c(3,1),\n          max.words=100, random.order=FALSE, rot.per=0.4,\n          use.r.layout=FALSE, random.color = TRUE, colors = 1:20)"
  },
  {
    "objectID": "Diapositivas.html#section",
    "href": "Diapositivas.html#section",
    "title": "Laboratorios 1 y 2",
    "section": "",
    "text": "Tabla de posiciones 1 - 10 de HiCi según World.Rank\n\n\n\n\n\n\n  \n    \n      Institution\n      Region\n      Country\n      World.Rank\n      HiCi\n    \n  \n  \n    Harvard \nAmericas\nUS\n1\n100.0\n    Stanford \nAmericas\nUS\n3\n87.6\n    California, Berkeley\nAmericas\nUS\n2\n69.0\n    MIT\nAmericas\nUS\n4\n66.8\n    Princeton \nAmericas\nUS\n7\n61.1\n    California, San Diego\nAmericas\nUS\n14\n60.2\n    Michigan - Ann Arbor\nAmericas\nUS\n22\n59.8\n    Yale \nAmericas\nUS\n11\n58.5\n    Pennsylvania\nAmericas\nUS\n15\n57.1\n    California, Los Angeles\nAmericas\nUS\n13\n56.9\n  \n  \n  \n\n\n\n\n\nTabla de posiciones 11 - 20 de HiCi según World.Rank\n\n\n\n\n\n\n  \n    \n      Institution\n      Region\n      Country\n      World.Rank\n      HiCi\n    \n  \n  \n    California I of Tech\nAmericas\nUS\n6\n56.7\n    Columbia \nAmericas\nUS\n8\n56.2\n    Cornell \nAmericas\nUS\n12\n54.3\n    Cambridge\nEurope\nUK\n5\n53.9\n    Washington\nAmericas\nUS\n16\n53.9\n    California, San Francisco\nAmericas\nUS\n18\n53.4\n    Wisconsin - Madison\nAmericas\nUS\n17\n51.9\n    Chicago\nAmericas\nUS\n9\n50.9\n    Minnesota, Twin Cities\nAmericas\nUS\n28\n50.4\n    Oxford\nEurope\nUK\n10\n48.8"
  },
  {
    "objectID": "Diapositivas.html#punto-7",
    "href": "Diapositivas.html#punto-7",
    "title": "Laboratorios 1 y 2",
    "section": "Punto 7",
    "text": "Punto 7\nPara las variables que tienen datos atípicos identificadas en el ejercicio 6 buscar una transformación que estabilice la varianza y mostrar graficos comparativos de datos originales y datos transformafos como en el ejemplo 1.9.1.\n\n\n\nciudades &lt;- read_excel(\"datos/ciudades original-filtrado-con etiquetas.xlsx\")\n\ncyt_infra_fin &lt;- ciudades |&gt; dplyr::select(dplyr::starts_with(c(\"CYT\", \"INFRA\", \"FIN\")))\n\ncyt_infra_fin2 &lt;- cyt_infra_fin |&gt; tidyr::pivot_longer(everything(), names_to = \"Variable\", values_to = \"Valor\") |&gt; arrange(Variable) |&gt;\n  mutate(\n    Tipo = case_when(\n      startsWith(Variable, \"CYT\") ~ \"CYT\",\n      startsWith(Variable, \"INFRA\") ~ \"INFRA\",\n      startsWith(Variable, \"FIN\") ~ \"FIN\",\n      TRUE ~ NA\n    ))\n\nggplot(cyt_infra_fin2, aes(x=Tipo, y=Valor, fill=Variable)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Diapositivas.html#section-1",
    "href": "Diapositivas.html#section-1",
    "title": "Laboratorios 1 y 2",
    "section": "",
    "text": "Estandarización de las variables & identificación de datos atípicos:\n\n\n\ncyt_infra_fin3 &lt;- cyt_infra_fin |&gt;\n  mutate(across(everything(), ~ (. - mean(.))/sd(.))) |&gt; tidyr::pivot_longer(everything(), names_to = \"Variable\", values_to = \"Valor\") |&gt; arrange(Variable) |&gt;\n  mutate(\n    Tipo = case_when(\n      startsWith(Variable, \"CYT\") ~ \"CYT\",\n      startsWith(Variable, \"INFRA\") ~ \"INFRA\",\n      startsWith(Variable, \"FIN\") ~ \"FIN\",\n      TRUE ~ NA\n    ))\n\nggplot(cyt_infra_fin3, aes(x=Tipo, y=Valor, fill=Variable)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Diapositivas.html#section-2",
    "href": "Diapositivas.html#section-2",
    "title": "Laboratorios 1 y 2",
    "section": "",
    "text": "Transformación de Box-Cox:\n\n\n\ncyt_infra_fin_outliers &lt;- cyt_infra_fin |&gt; dplyr::select(CYT_18,CYT_20,FIN_40,FIN_41,FIN_42,FIN_43,FIN_44,FIN_46,INFRA_26,INFRA_27,INFRA_28,INFRA_33,INFRA_37,INFRA_38)\n\nbox_cox &lt;- function(tipo){\n  datos &lt;- cyt_infra_fin |&gt; dplyr::select(colnames(cyt_infra_fin_outliers)) |&gt; dplyr::select(-FIN_46) |&gt;  dplyr::select(starts_with(tipo))\n  for (i in 1:dim(datos)[2]){\n    datos2 = datos[,i]\n    nombre_variable &lt;- colnames(datos2)\n    colnames(datos2) &lt;-  \"y\"\n    box_cox_trans &lt;- MASS::boxcox(y ~ 1, data = datos2, lambda = seq(-2, 2, by = 0.1), plotit = F)\n    lambda_vals &lt;- box_cox_trans$x\n    log_likelihood_vals &lt;- box_cox_trans$y\n    lambda_optimo &lt;- lambda_vals[which.max(log_likelihood_vals)]\n    plot(density(datos2$y), main = \"Datos originales\",\n           xlab = nombre_variable, cex.main = 2, cex.axis = 1.5, cex.names = 1.5,  cex.lab = 1.5, col = \"red\")\n    plot(lambda_vals, log_likelihood_vals, type = \"l\",\n           xlab = \"Lambda\", ylab = \"Log-Likelihood\",\n           main = TeX(paste(\"Box-Cox\", \"\\\\lambda\", \"=\",round(lambda_optimo,2))), cex.main = 2, cex.axis = 1.5, cex.names = 1.5,  cex.lab = 1.5, col = \"green\")\n    abline(v = lambda_optimo, col = \"red\", lty = 2)\n    plot(density((datos2$y^lambda_optimo-1)/lambda_optimo),\n         main = \"Transformación de Box-Cox\",\n         xlab = paste(nombre_variable, \"después de la T. de Box-Cox\"), cex.main = 2, cex.axis = 1.5, cex.names = 1.5,  cex.lab = 1.5,\n         col = \"blue\")\n  }\n}\n\n\nA continuación se muestran los respectivos gráficos para las variables del grupo C&T:"
  },
  {
    "objectID": "Diapositivas.html#section-3",
    "href": "Diapositivas.html#section-3",
    "title": "Laboratorios 1 y 2",
    "section": "",
    "text": "las del grupo FIN:"
  },
  {
    "objectID": "Diapositivas.html#section-4",
    "href": "Diapositivas.html#section-4",
    "title": "Laboratorios 1 y 2",
    "section": "",
    "text": "y las del grupo INFRA:"
  },
  {
    "objectID": "Diapositivas.html#section-5",
    "href": "Diapositivas.html#section-5",
    "title": "Laboratorios 1 y 2",
    "section": "",
    "text": "La variable FIN_46 tiene valores negativos. A esta variable se le realizó la transformación de Yeo-Johnson:\n\n\n\nFIN46 &lt;- cyt_infra_fin$FIN_46\nyj &lt;- yeojohnson(FIN46)\nlambda_yj &lt;- round(yj$lambda,3)\n\nplot(density(FIN46), main = \"Datos originales\",\n     xlab = \"FIN_46\", cex.main = 2, cex.axis = 1.5, cex.names = 1.5, col = \"red\")\nplot(density(yj$x.t),\n     main = TeX(paste(\"Transformación de Yeo-Johnson\", \"\\\\lambda\", \"=\",lambda_yj)),\n     xlab = paste(\"FIN_46\", \"después de la T. de Yeo-Johnson\"), cex.main = 1.5,\n     col = \"blue\")"
  },
  {
    "objectID": "Diapositivas.html#punto-9",
    "href": "Diapositivas.html#punto-9",
    "title": "Laboratorios 1 y 2",
    "section": "Punto 9",
    "text": "Punto 9\nCalcular la matriz de correlación entre las variables del grupo C&T del archivo ciudadesC y escoger las dos variables que tienen mayor correlación. Calcular la distancia euclidiana entre San Andrés y Riohacha con respecto a estas dos variables y luego calcular la distancia de Mahalanobis entre las mismas ciudades respecto a las mismas dos variables. Para el cálculo de la la distancia de Mahalanobis utilizar la matriz de covarianzas de las dos variables con todas las ciudades.\n\n\n\n# Cargar archivo y datos\narchivo &lt;- \"datos/ciudades original-filtrado-con etiquetas - copia.xlsx\"\nciudades &lt;- read_excel(archivo)\nciudades[ciudades$CIUDADES==\"San Arés\",1] &lt;-  \"San Andrés\"\nCYT &lt;- ciudades |&gt; dplyr::select(dplyr::starts_with(\"CYT\")) |&gt; as.data.frame()\nround(cor(CYT),3) |&gt; as.data.frame() |&gt; gt(rownames_to_stub = TRUE) |&gt; tab_header(\"Matriz de correlación variables CYT\") |&gt; gt_theme_dot_matrix() |&gt; opt_align_table_header(align = \"center\")\n\n\n\n\n\n\n  \n    \n      Matriz de correlación variables CYT\n    \n    \n    \n      \n      CYT_17\n      CYT_18\n      CYT_19\n      CYT_20\n      CYT_21\n    \n  \n  \n    CYT_17\n1.000\n-0.003\n0.545\n0.014\n0.078\n    CYT_18\n-0.003\n1.000\n-0.002\n-0.318\n-0.537\n    CYT_19\n0.545\n-0.002\n1.000\n0.186\n0.175\n    CYT_20\n0.014\n-0.318\n0.186\n1.000\n0.663\n    CYT_21\n0.078\n-0.537\n0.175\n0.663\n1.000\n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n  \n    \n      \n      Variable 1\n      Variable 2\n      correlación\n    \n  \n  \n    Variables más correlacionadas\nCYT_20\nCYT_21\n0.663\n  \n  \n  \n\n\n\n\n\n\n\n# Función para calcular la distancia de Mahalanobis y graficar\ncalcular_mahalanobis &lt;- function(ciudades, var1, var2, ciudad1, ciudad2, resultados) {\n  # Selección de las variables\n  data &lt;- subset(ciudades, select = c(var1, var2)) |&gt; as.data.frame()\n  row.names(data) &lt;- ciudades$CIUDADES\n\n  # Cálculo de la distancia entre las dos ciudades\n  dist_mahalanobis &lt;- mahalanobis(as.numeric(data[which(rownames(data) == ciudad1),]),\n                                  as.numeric(data[which(rownames(data) == ciudad2),]),\n                                  cov(data))\n\n  # Cálculo de la distancia de Mahalanobis respecto a la media\n  dist_media &lt;- mahalanobis(data[which(rownames(data) == ciudad1 | rownames(data) == ciudad2),],\n                            colMeans(data), cov(data))\n  \n  dist_euclideana &lt;- as.matrix(dist(data))[ciudad1,ciudad2]\n\n  # Agregar los resultados a la tabla\n  resultados &lt;- rbind(resultados, data.frame(\n    Ciudad1 = ciudad1,\n    Ciudad2 = ciudad2,\n    `Distancia de Mahalanobis` = dist_mahalanobis,\n    Distancia_media_ciudad1 = dist_media[1],\n    Distancia_media_ciudad2 = dist_media[2],\n    `Distancia Euclideana` = dist_euclideana,\n    Variables = paste(var1, var2, sep = \" & \")\n  ))\n\n  # Mostrar distancias\n  # print(paste(\"Distancia Mahalanobis entre\", ciudad1, \"y\", ciudad2, \": \", dist_mahalanobis))\n  # print(paste(\"Distancia Mahalanobis de\",ciudad1,\"respecto a la media: \", dist_media[1]))\n  # print(paste(\"Distancia Mahalanobis de\",ciudad2,\"respecto a la media: \", dist_media[2]))\n\n  # Graficar\n  xbar &lt;- colMeans(data)\n  plot(ciudades[[var1]], ciudades[[var2]],\n       xlab = var1, ylab = var2, main = paste(\"Gráfico de\", var1, \"vs\", var2),\n       xlim = c(min(ciudades[[var1]]), max(ciudades[[var1]])),\n       ylim = c(min(ciudades[[var2]]), max(ciudades[[var2]])))\n  \n  # Añadir las etiquetas de las ciudades\n  text(ciudades[[var1]], ciudades[[var2]], ciudades$CIUDADES, cex = 0.5, pos = 3)\n  \n  # Dibujar líneas de la media\n  abline(h = xbar[2], col = \"orange\", lty = 2)\n  abline(v = xbar[1], col = \"orange\", lty = 2)\n  \n  # Etiqueta para la media\n  text(xbar[1] - 0.2, xbar[2] - 0.02,\n       labels = expression(bar(x) ~ \"y\" ~ bar(y)),\n       col = \"purple\", cex = 0.7, font = 1, las = 2)\n\n  # Devolver los resultados actualizados\n  return(resultados)\n}\n\n# Crear una tabla vacía para almacenar los resultados\nresultados &lt;- data.frame(Ciudad1 = character(0), Ciudad2 = character(0),\n                         `Distancia de Mahalanobis` = numeric(0), Distancia_Media_ciudad1 = numeric(0),\n                         Distancia_Media_ciudad2 = numeric(0), `Distancia Euclideana` = numeric(0),\n                         Variables = character(0))\n\n\n\n\n\n\n\n\n\n  \n    \n      Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés\n    \n    \n    \n      Ciudad 1\n      Ciudad 2\n      Variables\n      Distancia Euclideana\n      Distancia de Mahalanobis\n    \n  \n  \n    Riohacha\nSan Andrés\nCYT_20 & CYT_21\n0.2199771\n3.43303"
  },
  {
    "objectID": "Diapositivas.html#punto-11",
    "href": "Diapositivas.html#punto-11",
    "title": "Laboratorios 1 y 2",
    "section": "Punto 11",
    "text": "Punto 11\nRepetir los ejercicios 9 y 10 con las variables del grupo INFRA\n\n\n\nciudades &lt;- read_excel(\"datos/ciudades original-filtrado-con etiquetas - copia.xlsx\")\n\n# Función para calcular la distancia de Mahalanobis y graficar\n\ncalcular_mahalanobis &lt;- function(ciudades, var1, var2, ciudad1, ciudad2, resultados) {\n  # Selección de las variables y conversión a data frame\n  data &lt;- as.data.frame(subset(ciudades, select = c(var1, var2)))\n  rownames(data) &lt;- ciudades$CIUDADES\n  \n  # Convertir las variables a numéricas\n  data[, var1] &lt;- as.numeric(data[, var1])\n  data[, var2] &lt;- as.numeric(data[, var2])\n  \n  # Cálculo de la distancia de Mahalanobis entre las dos ciudades\n  dist_mahalanobis &lt;- sqrt(mahalanobis(as.numeric(data[rownames(data) == ciudad1, ]),\n                                       colMeans(data),\n                                       cov(data)))\n  \n  # Agregar los resultados a la tabla\n  resultados &lt;- rbind(resultados, data.frame(\n    Ciudad1 = ciudad1,\n    Ciudad2 = ciudad2,\n    Distancia_Mahal = round(dist_mahalanobis,3),\n    Variables = paste(var1, var2, sep = \" & \")\n  ))\n  \n  # Mostrar distancias\n  # print(paste(\"Distancia Mahalanobis entre\", ciudad1, \"y\", ciudad2, \": \", dist_mahalanobis))\n  \n  # Graficar\n  xbar &lt;- colMeans(data)\n  plot(data[, 1], data[, 2],,\n       xlab = var1, ylab = var2, main = paste(\"Gráfico de\", var1, \"vs\", var2),\n       xlim = c(min(data[, 1], na.rm = TRUE), max(data[, 1], na.rm = TRUE)),\n       ylim = c(min(data[, 2], na.rm = TRUE), max(data[, 2], na.rm = TRUE)))\n  \n  # Añadir etiquetas de las ciudades\n  text(data[, 1], data[, 2], rownames(data), cex = 0.7, pos = 3)\n  \n  # Dibujar líneas de la media\n  abline(h = xbar[2], col = \"orange\", lty = 2)\n  abline(v = xbar[1], col = \"orange\", lty = 2)\n  \n  # Etiqueta para la media\n  text(xbar[1] - 0.2, xbar[2] - 0.02,\n       labels = expression(bar(x) ~ \"y\" ~ bar(y)),\n       col = \"purple\", cex = 0.7, font = 1, las = 2)\n  \n  # Devolver los resultados actualizados\n  return(resultados)\n}\n\nciudades[ciudades$CIUDADES==\"San Arés\",1] &lt;-  \"San Andrés\"\n\n# Crear tabla vacía para almacenar resultados\nresultados &lt;- data.frame(Ciudad1 = character(0), Ciudad2 = character(0), \n                         Distancia_Mahal = numeric(0),\n                         Variables = character(0))\n\n# Función para calcular la distancia euclidiana entre dos ciudades\ncalcular_euclidiana &lt;- function(ciudades, var1, var2, ciudad1, ciudad2) {\n  # Selección de las variables y conversión a data frame\n  data &lt;- as.data.frame(subset(ciudades, select = c(var1, var2)))\n  rownames(data) &lt;- ciudades$CIUDADES\n  \n  # Convertir las variables a numéricas\n  data[, var1] &lt;- as.numeric(data[, var1])\n  data[, var2] &lt;- as.numeric(data[, var2])\n  \n  # Extraer las coordenadas de las dos ciudades\n  coord_ciudad1 &lt;- as.numeric(data[rownames(data) == ciudad1, ])\n  coord_ciudad2 &lt;- as.numeric(data[rownames(data) == ciudad2, ])\n  \n  # Calcular la distancia euclidiana\n  dist_euclidiana &lt;- round(sqrt(sum((coord_ciudad1 - coord_ciudad2)^2)),3)\n  \n  # Mostrar el resultado\n  # print(paste(\"Distancia Euclidiana entre\", ciudad1, \"y\", ciudad2, \":\", dist_euclidiana))\n  \n  # Devolver la distancia\n  return(dist_euclidiana)\n}\n\n\n\n\nVariables con mayor córrelación\n\n\n\ninfra_vars &lt;- subset(ciudades, select = startsWith(colnames(ciudades), \"INFRA\"))\n\n# Calcular la matriz de correlación\ncor_matrix &lt;- cor(infra_vars)\n\n# Encontrar las variables con mayor correlación\nmax_corr &lt;- which(cor_matrix == max(cor_matrix[upper.tri(cor_matrix)]), arr.ind = TRUE)\nvar1 &lt;- colnames(infra_vars)[max_corr[1]]\nvar2 &lt;- colnames(infra_vars)[max_corr[2]]\n\n# Llamar a la función para las variables con mayor correlación\ndist_mahalanobis &lt;- calcular_mahalanobis(ciudades, var1, var2, \"San Andrés\", \"Riohacha\", resultados)\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n      Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés\n    \n    \n    \n      Ciudad 1\n      Ciudad 2\n      Variables\n      Distancia Euclideana\n      Distancia de Mahalanobis\n    \n  \n  \n    San Andrés\nRiohacha\nINFRA_28 & INFRA_27\n811.136\n2.997\n  \n  \n  \n\n\n\n\n\nVariables con menor córrelación\n\n\n\n# Encontrar las variables con menor correlación\nmin_corr &lt;- which(cor_matrix == min(cor_matrix[upper.tri(cor_matrix)]), arr.ind = TRUE)\nvar11 &lt;- colnames(infra_vars)[min_corr[1]]\nvar22 &lt;- colnames(infra_vars)[min_corr[2]]\n\n# Llamar a la función para las variables con menor correlación\ndist_mahalanobis &lt;- calcular_mahalanobis(ciudades, var11, var22, \"San Andrés\", \"Riohacha\", resultados)\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n      Distancia Euclideana y de Mahalanobis entre Riohacha y San Andrés\n    \n    \n    \n      Ciudad 1\n      Ciudad 2\n      Variables\n      Distancia Euclideana\n      Distancia de Mahalanobis\n    \n  \n  \n    San Andrés\nRiohacha\nINFRA_38 & INFRA_37\n95.519\n3.298"
  },
  {
    "objectID": "Diapositivas.html#laboratorio-2",
    "href": "Diapositivas.html#laboratorio-2",
    "title": "Laboratorios 1 y 2",
    "section": "Laboratorio 2",
    "text": "Laboratorio 2"
  },
  {
    "objectID": "Diapositivas.html#punto-1",
    "href": "Diapositivas.html#punto-1",
    "title": "Laboratorios 1 y 2",
    "section": "Punto 1",
    "text": "Punto 1\nEl vector de medias de todas las variables.\n\n¿Cuál es la variable que tiene la mayor media?\n¿Cuál es la variable que tiene la menor media?\n¿A qué puede atribuirse la diferencia en los valores de los dos promedios?\n\n\n\n\n# Cargar y renombrar las columnas\nCiudades &lt;- read_excel(\"datos/ciudades original-filtrado-con etiquetas - copia.xlsx\")\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_1\"] &lt;- \"PC\"\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_2\"] &lt;- \"TCP\"\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_5\"] &lt;- \"AA\"\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_6\"] &lt;- \"CBPS\"\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_7\"] &lt;- \"CBES\"\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_8\"] &lt;- \"RAP\"\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_9\"] &lt;- \"CC\"\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_10\"] &lt;- \"CPT\"\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_11\"] &lt;- \"CS\"\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_12\"] &lt;- \"MI\"\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_13\"] &lt;- \"DCFS\"\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_14\"] &lt;- \"VI\"\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_15\"] &lt;- \"H\"\ncolnames(Ciudades)[colnames(Ciudades) == \"RH_16\"] &lt;- \"S\"\nRH &lt;- Ciudades[,1:15]\n\n# Calcular las medias\nmed &lt;- round(t(colMeans(RH[,2:15])), 2)\nmed &lt;- as.data.frame(round(colMeans(RH[,2:15]), 2))\ncolnames(med) &lt;- c(\"Media\")\n\n# Centrar la tabla y ajustar el tamaño\nmed %&gt;%\n  kable(\"html\") %&gt;%\n  kable_styling(\"basic\", full_width = FALSE, position = \"center\") %&gt;%\n  kable_styling(font_size = 16) %&gt;%\n  column_spec(1, bold = TRUE) %&gt;%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\")) %&gt;%\n  row_spec(0, bold = TRUE)\n\n\n\n\n\n\nMedia\n\n\n\n\nPC\n888021.77\n\n\nTCP\n0.01\n\n\nAA\n0.12\n\n\nCBPS\n1.09\n\n\nCBES\n0.21\n\n\nRAP\n23.27\n\n\nCC\n0.28\n\n\nCPT\n1349.49\n\n\nCS\n0.76\n\n\nMI\n14.08\n\n\nDCFS\n3.66\n\n\nVI\n6.98\n\n\nH\n4.63\n\n\nS\n0.31"
  },
  {
    "objectID": "Diapositivas.html#punto-2",
    "href": "Diapositivas.html#punto-2",
    "title": "Laboratorios 1 y 2",
    "section": "Punto 2",
    "text": "Punto 2\nCalcular la matriz \\(Y\\) de datos centrados y estandarizados y contestar los items 1a y 1b del punto 1. ¿A qué pueden atriburse las diferencias en los promedios ahora?\n\\[y_{ij} = \\frac{x_{ij} - \\bar{x}_j}{\\sigma_j}\\]\n\n\n\nY &lt;- scale(RH[,2:15], scale = T)\n# Redondear la matriz 'Y' a 2 decimales\nY &lt;- round(Y, 2)\n\nmed &lt;- as.data.frame(round(colMeans(Y), 2))\ncolnames(med) &lt;- c(\"Media\")\n\n# Centrar la tabla y ajustar el tamaño\nmed %&gt;%\n  kable(\"html\") %&gt;%\n  kable_styling(\"basic\", full_width = FALSE, position = \"center\") %&gt;%\n  kable_styling(font_size = 16) %&gt;%\n  column_spec(1, bold = TRUE) %&gt;%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\")) %&gt;%\n  row_spec(0, bold = TRUE)\n\n\n\n\n\n\nMedia\n\n\n\n\nPC\n0\n\n\nTCP\n0\n\n\nAA\n0\n\n\nCBPS\n0\n\n\nCBES\n0\n\n\nRAP\n0\n\n\nCC\n0\n\n\nCPT\n0\n\n\nCS\n0\n\n\nMI\n0\n\n\nDCFS\n0\n\n\nVI\n0\n\n\nH\n0\n\n\nS\n0"
  },
  {
    "objectID": "Diapositivas.html#punto-4-1",
    "href": "Diapositivas.html#punto-4-1",
    "title": "Laboratorios 1 y 2",
    "section": "Punto 4",
    "text": "Punto 4\nCalcular la matriz de correlación \\(R\\). Identificar las dos variables con mayor correlación y las dos con menor correlación. ¿Son las mismas que las que tienen mayor y menor covarianza identificadas en el punto 3?\n\n\n\n# Calcular la matriz de correlación\nR &lt;- cor(RH[,2:15])\nR &lt;- round(R, 2)\n\n# cat(\"Matriz de correlación R:\\n\")\nR |&gt; as.data.frame() |&gt; gt(rownames_to_stub = TRUE) |&gt; tab_header(\"Matriz de correlación\") |&gt; gt_theme_dot_matrix() |&gt; opt_align_table_header(align = \"center\")\n\n\n\n\n\n\n  \n    \n      Matriz de correlación\n    \n    \n    \n      \n      PC\n      TCP\n      AA\n      CBPS\n      CBES\n      RAP\n      CC\n      CPT\n      CS\n      MI\n      DCFS\n      VI\n      H\n      S\n    \n  \n  \n    PC\n1.00\n-0.05\n-0.15\n-0.11\n0.79\n-0.01\n0.45\n-0.22\n0.03\n-0.07\n-0.10\n-0.18\n-0.08\n-0.12\n    TCP\n-0.05\n1.00\n0.83\n-0.08\n-0.25\n0.57\n-0.30\n-0.26\n0.12\n0.68\n0.26\n0.04\n-0.18\n-0.08\n    AA\n-0.15\n0.83\n1.00\n0.11\n-0.34\n0.71\n-0.52\n-0.13\n0.03\n0.64\n-0.08\n-0.25\n-0.13\n-0.24\n    CBPS\n-0.11\n-0.08\n0.11\n1.00\n0.07\n0.49\n-0.02\n-0.03\n-0.04\n-0.11\n0.24\n0.20\n0.18\n-0.60\n    CBES\n0.79\n-0.25\n-0.34\n0.07\n1.00\n-0.15\n0.58\n0.00\n0.17\n-0.10\n-0.07\n-0.06\n0.02\n-0.24\n    RAP\n-0.01\n0.57\n0.71\n0.49\n-0.15\n1.00\n-0.45\n-0.26\n-0.14\n0.35\n0.26\n0.05\n-0.19\n-0.37\n    CC\n0.45\n-0.30\n-0.52\n-0.02\n0.58\n-0.45\n1.00\n0.13\n0.29\n-0.26\n0.01\n0.08\n0.05\n-0.11\n    CPT\n-0.22\n-0.26\n-0.13\n-0.03\n0.00\n-0.26\n0.13\n1.00\n-0.37\n0.07\n-0.21\n-0.18\n0.12\n0.06\n    CS\n0.03\n0.12\n0.03\n-0.04\n0.17\n-0.14\n0.29\n-0.37\n1.00\n0.10\n-0.26\n-0.18\n0.01\n-0.08\n    MI\n-0.07\n0.68\n0.64\n-0.11\n-0.10\n0.35\n-0.26\n0.07\n0.10\n1.00\n0.12\n-0.12\n0.19\n-0.17\n    DCFS\n-0.10\n0.26\n-0.08\n0.24\n-0.07\n0.26\n0.01\n-0.21\n-0.26\n0.12\n1.00\n0.69\n0.11\n0.19\n    VI\n-0.18\n0.04\n-0.25\n0.20\n-0.06\n0.05\n0.08\n-0.18\n-0.18\n-0.12\n0.69\n1.00\n0.04\n0.01\n    H\n-0.08\n-0.18\n-0.13\n0.18\n0.02\n-0.19\n0.05\n0.12\n0.01\n0.19\n0.11\n0.04\n1.00\n-0.10\n    S\n-0.12\n-0.08\n-0.24\n-0.60\n-0.24\n-0.37\n-0.11\n0.06\n-0.08\n-0.17\n0.19\n0.01\n-0.10\n1.00\n  \n  \n  \n\n\n\n\n\n\n\n# Convertir la matriz de correlación en formato largo y omitir la diagonal\ncorrelaciones &lt;- as.data.frame(as.table(R))\ncorrelaciones &lt;- correlaciones[correlaciones$Var1 != correlaciones$Var2, ]\n\n# Identificar las dos mayores y menores correlaciones\nmayor_cor &lt;- head(correlaciones[order(-abs(correlaciones$Freq)), ], 2)\nmenor_cor &lt;- head(correlaciones[order(abs(correlaciones$Freq)), ], 2)\n\ntibble(\n  a = c(\"Las dos variables con mayor correlación\", \"Las dos variables con menor correlación\"),\n  `Variable 1` = c(mayor_cor[1,1],menor_cor[1,1]),\n  `Variable 2` = c(mayor_cor[1,2],menor_cor[1,2]),\n  Correlación = c(mayor_cor[1,3], menor_cor[1,3]))|&gt; \n  gt(rowname_col = \"a\") |&gt; gt_theme_538()\n\n\n\n\n\n\n  \n    \n      \n      Variable 1\n      Variable 2\n      Correlación\n    \n  \n  \n    Las dos variables con mayor correlación\nAA\nTCP\n0.83\n    Las dos variables con menor correlación\nCPT\nCBES\n0.00"
  },
  {
    "objectID": "Diapositivas.html#punto-7-1",
    "href": "Diapositivas.html#punto-7-1",
    "title": "Laboratorios 1 y 2",
    "section": "Punto 7",
    "text": "Punto 7\nCalcular la distancia euclidiana entre ciudades respecto a las variables Analfabetismo y Rel.al.prof e identificar las dos ciudades más cercanas y las dos ciudades más lejanas.\n\n\n\nCiudad &lt;- Ciudades[, c(\"CIUDADES\", \"AA\", \"RAP\")]\nCiudad &lt;- as.data.frame(Ciudad)\n\nrownames(Ciudad)&lt;-Ciudad$CIUDADES\nrownames(Ciudad)[17] &lt;- \"San Andrés\"\nX &lt;- Ciudad[,-1]\n\n# Cálculo de la distancia euclidiana\nDe &lt;- distances(X, id_variable = row.names(X))\nDe &lt;- round(as.matrix(De), 2)\n\n# Mostrar la matriz de distancias\nDe |&gt; as.data.frame() |&gt; gt(rownames_to_stub = TRUE) |&gt; gt_theme_dot_matrix() |&gt; \n  tab_header(\"Matriz de distancias euclidianas\") |&gt; \n  opt_align_table_header(align = \"center\") \n\n\n\n\n\n\n  \n    \n      Matriz de distancias euclidianas\n    \n    \n    \n      \n      Armenia\n      Barranquilla\n      Bogotá, D.C.\n      Bucaramanga\n      Cali\n      Cartage\n      Cúcuta\n      Ibagué\n      Manizales\n      Medellín\n      Montería\n      Neiva\n      Pasto\n      Pereira\n      Popayán\n      Riohacha\n      San Andrés\n      Santa Marta\n      Sincelejo\n      Tunja\n      Valledupar\n      Villavicencio\n    \n  \n  \n    Armenia\n0.00\n0.10\n0.18\n0.22\n0.49\n1.91\n0.04\n0.95\n0.26\n3.80\n3.62\n0.89\n0.66\n0.10\n0.94\n3.70\n2.10\n0.40\n2.49\n0.34\n2.02\n2.95\n    Barranquilla\n0.10\n0.00\n0.08\n0.32\n0.58\n1.81\n0.13\n0.85\n0.36\n3.71\n3.52\n0.79\n0.76\n0.01\n1.04\n3.60\n2.19\n0.31\n2.40\n0.43\n1.92\n2.85\n    Bogotá, D.C.\n0.18\n0.08\n0.00\n0.40\n0.67\n1.73\n0.21\n0.77\n0.44\n3.63\n3.44\n0.71\n0.84\n0.07\n1.12\n3.52\n2.27\n0.23\n2.32\n0.51\n1.84\n2.77\n    Bucaramanga\n0.22\n0.32\n0.40\n0.00\n0.27\n2.12\n0.19\n1.16\n0.04\n4.02\n3.84\n1.11\n0.44\n0.32\n0.72\n3.92\n1.88\n0.62\n2.71\n0.12\n2.23\n3.17\n    Cali\n0.49\n0.58\n0.67\n0.27\n0.00\n2.39\n0.46\n1.43\n0.23\n4.29\n4.11\n1.38\n0.17\n0.59\n0.45\n4.18\n1.61\n0.89\n2.98\n0.15\n2.50\n3.44\n    Cartage\n1.91\n1.81\n1.73\n2.12\n2.39\n0.00\n1.93\n0.96\n2.17\n1.90\n1.71\n1.01\n2.56\n1.80\n2.84\n1.79\n4.00\n1.50\n0.59\n2.24\n0.11\n1.04\n    Cúcuta\n0.04\n0.13\n0.21\n0.19\n0.46\n1.93\n0.00\n0.97\n0.24\n3.83\n3.65\n0.92\n0.63\n0.13\n0.91\n3.72\n2.07\n0.43\n2.52\n0.31\n2.04\n2.98\n    Ibagué\n0.95\n0.85\n0.77\n1.16\n1.43\n0.96\n0.97\n0.00\n1.20\n2.86\n2.68\n0.05\n1.60\n0.84\n1.88\n2.75\n3.04\n0.54\n1.55\n1.28\n1.07\n2.00\n    Manizales\n0.26\n0.36\n0.44\n0.04\n0.23\n2.17\n0.24\n1.20\n0.00\n4.06\n3.88\n1.15\n0.40\n0.36\n0.68\n3.96\n1.84\n0.66\n2.75\n0.08\n2.28\n3.21\n    Medellín\n3.80\n3.71\n3.63\n4.02\n4.29\n1.90\n3.83\n2.86\n4.06\n0.00\n0.19\n2.91\n4.46\n3.70\n4.74\n0.18\n5.90\n3.40\n1.31\n4.14\n1.79\n0.85\n    Montería\n3.62\n3.52\n3.44\n3.84\n4.11\n1.71\n3.65\n2.68\n3.88\n0.19\n0.00\n2.73\n4.28\n3.52\n4.56\n0.13\n5.72\n3.22\n1.13\n3.96\n1.61\n0.67\n    Neiva\n0.89\n0.79\n0.71\n1.11\n1.38\n1.01\n0.92\n0.05\n1.15\n2.91\n2.73\n0.00\n1.55\n0.79\n1.83\n2.81\n2.99\n0.49\n1.60\n1.23\n1.12\n2.06\n    Pasto\n0.66\n0.76\n0.84\n0.44\n0.17\n2.56\n0.63\n1.60\n0.40\n4.46\n4.28\n1.55\n0.00\n0.76\n0.28\n4.35\n1.44\n1.06\n3.15\n0.32\n2.67\n3.61\n    Pereira\n0.10\n0.01\n0.07\n0.32\n0.59\n1.80\n0.13\n0.84\n0.36\n3.70\n3.52\n0.79\n0.76\n0.00\n1.04\n3.59\n2.20\n0.30\n2.39\n0.44\n1.91\n2.85\n    Popayán\n0.94\n1.04\n1.12\n0.72\n0.45\n2.84\n0.91\n1.88\n0.68\n4.74\n4.56\n1.83\n0.28\n1.04\n0.00\n4.64\n1.16\n1.34\n3.43\n0.60\n2.95\n3.89\n    Riohacha\n3.70\n3.60\n3.52\n3.92\n4.18\n1.79\n3.72\n2.75\n3.96\n0.18\n0.13\n2.81\n4.35\n3.59\n4.64\n0.00\n5.79\n3.29\n1.20\n4.03\n1.68\n0.76\n    San Andrés\n2.10\n2.19\n2.27\n1.88\n1.61\n4.00\n2.07\n3.04\n1.84\n5.90\n5.72\n2.99\n1.44\n2.20\n1.16\n5.79\n0.00\n2.50\n4.59\n1.76\n4.11\n5.04\n    Santa Marta\n0.40\n0.31\n0.23\n0.62\n0.89\n1.50\n0.43\n0.54\n0.66\n3.40\n3.22\n0.49\n1.06\n0.30\n1.34\n3.29\n2.50\n0.00\n2.09\n0.74\n1.61\n2.55\n    Sincelejo\n2.49\n2.40\n2.32\n2.71\n2.98\n0.59\n2.52\n1.55\n2.75\n1.31\n1.13\n1.60\n3.15\n2.39\n3.43\n1.20\n4.59\n2.09\n0.00\n2.83\n0.48\n0.46\n    Tunja\n0.34\n0.43\n0.51\n0.12\n0.15\n2.24\n0.31\n1.28\n0.08\n4.14\n3.96\n1.23\n0.32\n0.44\n0.60\n4.03\n1.76\n0.74\n2.83\n0.00\n2.35\n3.28\n    Valledupar\n2.02\n1.92\n1.84\n2.23\n2.50\n0.11\n2.04\n1.07\n2.28\n1.79\n1.61\n1.12\n2.67\n1.91\n2.95\n1.68\n4.11\n1.61\n0.48\n2.35\n0.00\n0.94\n    Villavicencio\n2.95\n2.85\n2.77\n3.17\n3.44\n1.04\n2.98\n2.00\n3.21\n0.85\n0.67\n2.06\n3.61\n2.85\n3.89\n0.76\n5.04\n2.55\n0.46\n3.28\n0.94\n0.00"
  },
  {
    "objectID": "Diapositivas.html#section-6",
    "href": "Diapositivas.html#section-6",
    "title": "Laboratorios 1 y 2",
    "section": "",
    "text": "# Convertir la matriz de distancias en un data frame\nDe_df &lt;- as.data.frame(as.table(De))\n\n# Eliminar los duplicados dejando solo la mitad superior de la matriz (sin la diagonal)\nDe_df &lt;- De_df[upper.tri(De, diag = FALSE), ]\n\n# Renombrar columnas del data frame\ncolnames(De_df) &lt;- c(\"Ciudad 1\", \"Ciudad 2\", \"Distancia\")\n\n# Ordenar las distancias de mayor a menor\nDe_df &lt;- De_df[order(-De_df$Distancia), ]\n\n# Seleccionar las 2 ciudades más distantes\nciudades_mas_distantes &lt;- head(De_df, 2)\n\n# Seleccionar las 2 ciudades más cercanas\nciudades_mas_cercanas &lt;- tail(De_df, 2)\n\nrow.names(ciudades_mas_distantes) &lt;- NULL\nrow.names(ciudades_mas_cercanas) &lt;- NULL\n\n\n\n\n\n\n\n\n\n\n  \n    \n      Ciudades más lejanas\n    \n    \n    \n      Ciudad 1\n      Ciudad 2\n      Distancia\n    \n  \n  \n    Medellín\nSan Andrés\n5.90\n    Riohacha\nSan Andrés\n5.79\n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n\n  \n    \n      Ciudades más cercanas\n    \n    \n    \n      Ciudad 1\n      Ciudad 2\n      Distancia\n    \n  \n  \n    Bucaramanga\nManizales\n0.04\n    Barranquilla\nPereira\n0.01"
  },
  {
    "objectID": "Diapositivas.html#punto-9-1",
    "href": "Diapositivas.html#punto-9-1",
    "title": "Laboratorios 1 y 2",
    "section": "Punto 9",
    "text": "Punto 9\nComprobar que la matriz de covarianzas se puede obtener con el producto \\(\\frac{1}{n}\\tilde{X}^\\prime\\tilde{X}\\) calcuandola a partir de la matriz de datos centrados de la matriz \\(RH\\)\n\n\n\n# Centrar las columnas de la subtabla RH\nXtil &lt;- scale(RH[,2:15], scale = FALSE) \n\nn &lt;- nrow(Xtil)\n\n# Matriz de covarianzas calculada manualmente\ncov_matrix_manual &lt;- (1 / n) * t(Xtil) %*% Xtil  \n\n# Matriz de covarianzas \ncov_matrix_R &lt;- var(RH[,2:15])\n\n#Comparacion \nall.equal(cov_matrix_manual, cov_matrix_R)\n\n\n[1] \"Mean relative difference: 0.04761905\"\n\n\nLa diferencia en los resultados radica en que la función var() en R utiliza por defecto \\(\\frac{1}{n-1}\\) que es el estimador muestral para calcular la varianza de una variable cuantitativa.\n\n\n\n# Matriz de covarianzas ajustando el estimador muestral calculada manualmente)\ncov_matrix_adjman &lt;- (1 / (n-1)) * t(Xtil) %*% Xtil  \n\nall.equal(cov_matrix_adjman, cov_matrix_R)\n\n\n[1] TRUE"
  },
  {
    "objectID": "Diapositivas.html#punto-10",
    "href": "Diapositivas.html#punto-10",
    "title": "Laboratorios 1 y 2",
    "section": "Punto 10",
    "text": "Punto 10\nComprobar que la matriz de correlación se puede obtener con el producto \\(\\frac{1}{n}Y^\\prime Y\\) calcuandola a partir de la matriz de datos centrados estandarizado de la matriz RH\n\n\n\nY &lt;- scale(RH[,2:15])\nn &lt;- nrow(Y)\nMCor &lt;- cor(RH[,2:15])\n\nResultado1 &lt;- 1 / n * t(Y) %*% Y\n\nall.equal(MCor, Resultado1)\n\n\n[1] \"Mean relative difference: 0.04545455\"\n\n\nNuevamente, la diferencia en los resultados radica en que la función cor() en R utiliza por defecto \\(\\frac{1}{n-1}\\), que es el estimador muestral para calcular la varianza de una variable cuantitativa.\n\n\n\nResultado2 &lt;- 1 / (n - 1) * t(Y) %*% Y  \nall.equal(MCor, Resultado2)\n\n\n[1] TRUE"
  }
]